<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>New user - new project - Remote Monitoring of Solar Charger Controller</title>
    <link>https://forum.mangoh.io/t/new-user-new-project-remote-monitoring-of-solar-charger-controller/4532</link>
    <description>Hello MangOH forum members.
  I just recently received help in order to “get connected” to AirVantage.  I briefly described my project to the support group, and they recommended that I introduce my project to the group and provide progress reports as I go.   I believe that this is the right location (Water cooler), but let me know if there is a better location for this type of discussion.

First, a little about myself…
  I’ve been an electrical design engineer for 34+ years.  My earliest work projects involved voice and data modems for use on global analog landlines.  Back then, 300 bps was “normal”, 1200 bps was “blazing”, and for particular circumstances, we were forced to operate in Germany at 10 bps (Morse Code might have been quicker).  Also back then I worked on a few projects that required embedded assembly code, but soon I moved on to pure electrical design in analog, digital, and power (except for a few VHDL and Verilog designs).

Fast forward a few decades…
  I’m now in a technical role providing support to design teams working on IIoT sensors, hubs, gateways, etc.  Many sensor manufacturers provide eval boards for their sensors, but their out-of-the-box application code is sometimes lacking flexibility for us to test with.  So to test these proof-of-concepts, it requires me to get software support (usually from within my organization).  I keep thinking that it would be great if I could just do it myself.  So I decided to learn some of these skills on my own – but for me, learning requires more than just “go through a tutorial and practice with canned projects on an eval board”.  I decided to work on a home project with some practical uses.  I hope to learn at least the following: embedded C coding, secure IoT communications to the cloud, cloud databases, cloud dashboard development, and OTA updates.  This might turn into a long-term project…

The project….
  My family owns a remote piece of property with a “cabin” which currently has no electricity.  However since we don’t use the cabin too often, my thinking was that it would be a perfect location for an off-grid solar panel charging a battery for us to use 12V LED overhead lighting whenever we were at the cabin.  One immediate challenge was the fact that the property is fully shaded with 75+ year old trees.  So I’ve been experimenting at home with a 2-panel solar array, a Solar charger (Renogy Rover 20 Amp Controller), and a 12V 100Ahr deep cycle lead-acid battery.  For my use-case, I think it will work.  The next challenge is that I’d like to remotely monitor the charger and battery health.  The Solar charger has a serial port which can be used to interact with the charger controller to provide status, real-time data, daily totals, historical totals, as well as provide the ability to change operating setpoints for the controller.  My next task was to learn some C coding so that I can use all the newer tools available for embedded devices (like the Sierra Wireless WP7700).  So, I’ve learned enough C code to be dangerous.  I now have two Windows C code applications that I’ve written.  One that interrogates the solar charger controller, and another one that simulates the charger controller (so I don’t have to be in the wood shed when I’m testing my code).   Next step =&gt; find a low data cost cellular SOM that I can use to interrogate the charger controller.

MangOH RED…
 At work, I was introduced to the Sierra Wireless SOM devices.  After looking over HW &amp; FW support for Quectel, SimCOM, and Sierra Wireless, I decided on Sierra Wireless.  The MangOH red seemed to have more than I needed – but was not too overloaded with extra ports that would be wasted in my application.  I purchased a MangOH red, and as of today, I was able to see some basic sensor data on the AirVantage portal.  My plan is to have the MangOH powered up once a night to get the current stats from the charger controller, then report those stats to a cloud database for extraction and display.  I also want to include an option to push an update (initially just parameters) during this once-a-night connection.

Sorry if this was longer than a typical post.  My future updates will be briefer, and focus only on significant progress.</description>
    
    <lastBuildDate>Thu, 28 May 2020 19:18:38 +0000</lastBuildDate>
    <category>Water cooler discussions</category>
    <atom:link href="https://forum.mangoh.io/t/new-user-new-project-remote-monitoring-of-solar-charger-controller/4532.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>New user - new project - Remote Monitoring of Solar Charger Controller</title>
        <dc:creator><![CDATA[craigbogli]]></dc:creator>
        <description><![CDATA[
            <p>Hello MangOH forum members.<br>
I just recently received help in order to “get connected” to AirVantage.  I briefly described my project to the support group, and they recommended that I introduce my project to the group and provide progress reports as I go.   I believe that this is the right location (Water cooler), but let me know if there is a better location for this type of discussion.</p>
<p>First, a little about myself…<br>
I’ve been an electrical design engineer for 34+ years.  My earliest work projects involved voice and data modems for use on global analog landlines.  Back then, 300 bps was “normal”, 1200 bps was “blazing”, and for particular circumstances, we were forced to operate in Germany at 10 bps (Morse Code might have been quicker).  Also back then I worked on a few projects that required embedded assembly code, but soon I moved on to pure electrical design in analog, digital, and power (except for a few VHDL and Verilog designs).</p>
<p>Fast forward a few decades…<br>
I’m now in a technical role providing support to design teams working on IIoT sensors, hubs, gateways, etc.  Many sensor manufacturers provide eval boards for their sensors, but their out-of-the-box application code is sometimes lacking flexibility for us to test with.  So to test these proof-of-concepts, it requires me to get software support (usually from within my organization).  I keep thinking that it would be great if I could just do it myself.  So I decided to learn some of these skills on my own – but for me, learning requires more than just “go through a tutorial and practice with canned projects on an eval board”.  I decided to work on a home project with some practical uses.  I hope to learn at least the following: embedded C coding, secure IoT communications to the cloud, cloud databases, cloud dashboard development, and OTA updates.  This might turn into a long-term project…</p>
<p>The project….<br>
My family owns a remote piece of property with a “cabin” which currently has no electricity.  However since we don’t use the cabin too often, my thinking was that it would be a perfect location for an off-grid solar panel charging a battery for us to use 12V LED overhead lighting whenever we were at the cabin.  One immediate challenge was the fact that the property is fully shaded with 75+ year old trees.  So I’ve been experimenting at home with a 2-panel solar array, a Solar charger (Renogy Rover 20 Amp Controller), and a 12V 100Ahr deep cycle lead-acid battery.  For my use-case, I think it will work.  The next challenge is that I’d like to remotely monitor the charger and battery health.  The Solar charger has a serial port which can be used to interact with the charger controller to provide status, real-time data, daily totals, historical totals, as well as provide the ability to change operating setpoints for the controller.  My next task was to learn some C coding so that I can use all the newer tools available for embedded devices (like the Sierra Wireless WP7700).  So, I’ve learned enough C code to be dangerous.  I now have two Windows C code applications that I’ve written.  One that interrogates the solar charger controller, and another one that simulates the charger controller (so I don’t have to be in the wood shed when I’m testing my code).   Next step =&gt; find a low data cost cellular SOM that I can use to interrogate the charger controller.</p>
<p>MangOH RED…<br>
At work, I was introduced to the Sierra Wireless SOM devices.  After looking over HW &amp; FW support for Quectel, SimCOM, and Sierra Wireless, I decided on Sierra Wireless.  The MangOH red seemed to have more than I needed – but was not too overloaded with extra ports that would be wasted in my application.  I purchased a MangOH red, and as of today, I was able to see some basic sensor data on the AirVantage portal.  My plan is to have the MangOH powered up once a night to get the current stats from the charger controller, then report those stats to a cloud database for extraction and display.  I also want to include an option to push an update (initially just parameters) during this once-a-night connection.</p>
<p>Sorry if this was longer than a typical post.  My future updates will be briefer, and focus only on significant progress.</p>
          <p><a href="https://forum.mangoh.io/t/new-user-new-project-remote-monitoring-of-solar-charger-controller/4532/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mangoh.io/t/new-user-new-project-remote-monitoring-of-solar-charger-controller/4532/1</link>
        <pubDate>Thu, 28 May 2020 18:42:19 +0000</pubDate>
        <guid isPermaLink="false">forum.mangoh.io-post-4532-1</guid>
        <source url="https://forum.mangoh.io/t/new-user-new-project-remote-monitoring-of-solar-charger-controller/4532.rss">New user - new project - Remote Monitoring of Solar Charger Controller</source>
      </item>
  </channel>
</rss>
