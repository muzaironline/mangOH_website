<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Building Custom Yocto Image</title>
    <link>https://forum.mangoh.io/t/building-custom-yocto-image/1299</link>
    <description>The instructions below show how to build custom yocto images for the WP76 and WP85.  Note that if someone chooses to build their own yocto image then they should set the LEGATO_KERNELROOT environment variable before building MangOH, for example:

**WP85**:
export LEGATO_KERNELROOT=&quot;~/yocto-2.2/build_src/tmp/work/swi_mdm9x15-poky-linux-gnueabi/linux-yocto/3.14.29-r0.1/linux-swi_mdm9x15-standard-build&quot;

**WP76**:
export LEGATO_KERNELROOT=&quot;~/yocto-2.2/build_src/tmp/work/swi_mdm9x28-poky-linux-gnueabi/linux-quic/3.18.44-r1/build&quot;

**1. Initialize repo**

Create yocto folder:
mkdir ~/yocto-2.2
cd ~/yocto-2.2

**WP85**:
repo init -u git://gerrit-legato/manifest -m lxswi/branches/master/systems/wp85xx.xml -g &quot;default,amss&quot;
 
**WP76**:
repo init -u git://gerrit-legato/manifest -m lxswi/branches/master/systems/wp76xx.xml

**2. Synchronize repo and build yocto**

repo sync
make image_src

To set/unset kernel configuration options use the following commands:
cd $LEGATO_KERNELROOT
VERBOSE=1 make ARCH=arm menuconfig

Note if you just want to rebuild the kernel then the following can be used in a script (e.g. here we create a script called build_kernel.sh and place in the build_src folder).

**WP85**:
bitbake -c compile -f linux-yocto
bitbake -c build -f linux-yocto
bitbake -c build -f mdm9x15-image-minimal

**WP76**:
bitbake -c compile -f linux-quic
bitbake -c build -f linux-quic
bitbake -c build -f mdm9x28-image-minimal

**3. Build and install the toolchain (optional)**

Note this step is only required for users that desire to build their own toolchain instead of downloading it from the sierrawireless web sites:

**WP85**:
https://source.sierrawireless.com/resources/airprime/software/wpx5xx/wpx5xx-firmware-latest-release-components/

**WP76**:
https://source.sierrawireless.com/resources/airprime/software/wp76xx/wp76xx-firmware-latest-release-components/

make toolchain_src

**WP85**:
cd ~/yocto-2.2/
sudo ./build_src/tmp/deploy/sdk/poky-swi-ext-glibc-x86_64-meta-toolchain-swi-ext-armv7a-neon-toolchain-swi-ext-2.2.3.sh

**WP76**:
cd ~/yocto-2.2/
sudo ./build_src/tmp/deploy/sdk/poky-swi-ext-glibc-x86_64-meta-toolchain-swi-ext-armv7a-neon-toolchain-swi-ext-2.2.3.sh

**4. Download new yocto build to the target device**

Note before downloading switch pin 7 up for the MangOH Red and then once the downloading has started switch pin 7 back down.

**WP85**:
cd ~/yocto-2.2/
swiflash -m “WP85XX” -i  ./build_src/tmp/deploy/images/swi-mdm9x15/yocto-legato_wp85.cwe  
OR
copy yocto-legato_wp85.cwe to a folder on Windows PC with fdt2 installed
fdt2 yocto-legato_wp85.cwe

**WP76**:
cd ~/yocto-2.2/
swiflash -m “WP76XX” -i  ../yocto-wp76/build_src/tmp/deploy/images/swi-mdm9x28/yocto_wp76xx.4k.cwe 
OR
copy yocto-legato_wp85.cwe to a folder on Windows PC with fdt2 installed
fdt2 yocto_wp76xx.4k.cwe</description>
    
    <lastBuildDate>Mon, 10 May 2021 11:30:53 +0000</lastBuildDate>
    <category>Wiki</category>
    <atom:link href="https://forum.mangoh.io/t/building-custom-yocto-image/1299.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Building Custom Yocto Image</title>
        <dc:creator><![CDATA[jyijyi]]></dc:creator>
        <description><![CDATA[
            <p>To make the legato image,  just type</p>
<p>leaf shell<br>
make wp76xx</p>
          <p><a href="https://forum.mangoh.io/t/building-custom-yocto-image/1299/25">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mangoh.io/t/building-custom-yocto-image/1299/25</link>
        <pubDate>Mon, 10 May 2021 11:30:53 +0000</pubDate>
        <guid isPermaLink="false">forum.mangoh.io-post-1299-25</guid>
        <source url="https://forum.mangoh.io/t/building-custom-yocto-image/1299.rss">Building Custom Yocto Image</source>
      </item>
      <item>
        <title>Building Custom Yocto Image</title>
        <dc:creator><![CDATA[kalaivani]]></dc:creator>
        <description><![CDATA[
            <p>can any one guide me how to build an .spk or .cwe file in VS Code application</p>
          <p><a href="https://forum.mangoh.io/t/building-custom-yocto-image/1299/24">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mangoh.io/t/building-custom-yocto-image/1299/24</link>
        <pubDate>Mon, 10 May 2021 11:05:26 +0000</pubDate>
        <guid isPermaLink="false">forum.mangoh.io-post-1299-24</guid>
        <source url="https://forum.mangoh.io/t/building-custom-yocto-image/1299.rss">Building Custom Yocto Image</source>
      </item>
      <item>
        <title>Building Custom Yocto Image</title>
        <dc:creator><![CDATA[drewwestrick]]></dc:creator>
        <description><![CDATA[
            <p><a class="mention" href="https://forum.mangoh.io/u/fgodfrey">@fgodfrey</a></p>
<p>Thanks for the insights. I figured it had something to do with the gcc version. I’m probably going to stick with 16.04 LTS for now just to avoid any headaches.</p>
<p>I too need to learn a lot more about Yocto and figure out how to add patches, packages, etc. I’m more familiar with Buildroot than Yocto.</p>
<p>On a related note, <a class="mention" href="https://forum.mangoh.io/u/dfrey">@dfrey</a> do you know what the update / release schedule at Sierra looks like for Yocto/Linux? I see the WP76XX source (as of Release 9) is using Yocto 2.2 and Kernel 3.18.44. I realize it isn’t feasible to stay on mainline Yocto and the kernel with each new official firmware release, but I do have some concerns pushing 3.18 to new devices we are developing that are supposed to have a 5 year life-cycle.</p>
          <p><a href="https://forum.mangoh.io/t/building-custom-yocto-image/1299/23">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mangoh.io/t/building-custom-yocto-image/1299/23</link>
        <pubDate>Wed, 30 May 2018 14:39:26 +0000</pubDate>
        <guid isPermaLink="false">forum.mangoh.io-post-1299-23</guid>
        <source url="https://forum.mangoh.io/t/building-custom-yocto-image/1299.rss">Building Custom Yocto Image</source>
      </item>
      <item>
        <title>Building Custom Yocto Image</title>
        <dc:creator><![CDATA[fgodfrey]]></dc:creator>
        <description><![CDATA[
            <p>I had these problems as well.  I think it’s because the 18.04 Ubuntu uses a newer version of gcc that has stricter checking.  I ended up fixing the various warnings/errors one at a time until I got a successful build.  I’ve flashed that onto my mangOH Red and it works fine.<br>
For this error, on line 40 of wp77xx-yocto/yocto/build_bin/tmp/work/x86_64-linux/qemu-native/2.7.0-r1/qemu-2.7.0/util/memfd.c, I just removed the “static” on memfd_create().</p>
<p>Unfortunately, I’m not really familiar with how to do things “right” in Yocto so I don’t have patches for what I changed or I’d post them.  If I remember right (I did this about 2 weeks ago) all the errors were things other people had hit with Yocto and 18.04.  I haven’t tried creating a Ubuntu 16.04 VM to build with.</p>
          <p><a href="https://forum.mangoh.io/t/building-custom-yocto-image/1299/22">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mangoh.io/t/building-custom-yocto-image/1299/22</link>
        <pubDate>Wed, 30 May 2018 05:47:40 +0000</pubDate>
        <guid isPermaLink="false">forum.mangoh.io-post-1299-22</guid>
        <source url="https://forum.mangoh.io/t/building-custom-yocto-image/1299.rss">Building Custom Yocto Image</source>
      </item>
      <item>
        <title>Building Custom Yocto Image</title>
        <dc:creator><![CDATA[drewwestrick]]></dc:creator>
        <description><![CDATA[
            <p>I noticed earlier today that I’m running Ubuntu 18.04 LTS and Yocto 2.2 only officially supports 16.04 LTS. I’m not sure why compiling qemu would give the <code>static declaration of ‘memfd_create’ follows non-static declaration</code> error on 18.04 and not 16.04 (maybe a different version of gcc or something else build related?). Long story short, it does look like I’m now able to successfully build yocto for WP76XX as well as the toolchain.</p>
          <p><a href="https://forum.mangoh.io/t/building-custom-yocto-image/1299/21">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mangoh.io/t/building-custom-yocto-image/1299/21</link>
        <pubDate>Wed, 30 May 2018 01:42:43 +0000</pubDate>
        <guid isPermaLink="false">forum.mangoh.io-post-1299-21</guid>
        <source url="https://forum.mangoh.io/t/building-custom-yocto-image/1299.rss">Building Custom Yocto Image</source>
      </item>
      <item>
        <title>Building Custom Yocto Image</title>
        <dc:creator><![CDATA[drewwestrick]]></dc:creator>
        <description><![CDATA[
            <p>Yes sorry that was a typo. <code>make image_src</code> is not even an option in the Makefile. I’m running <code>make image_bin</code>.</p>
          <p><a href="https://forum.mangoh.io/t/building-custom-yocto-image/1299/20">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mangoh.io/t/building-custom-yocto-image/1299/20</link>
        <pubDate>Tue, 29 May 2018 19:30:05 +0000</pubDate>
        <guid isPermaLink="false">forum.mangoh.io-post-1299-20</guid>
        <source url="https://forum.mangoh.io/t/building-custom-yocto-image/1299.rss">Building Custom Yocto Image</source>
      </item>
      <item>
        <title>Building Custom Yocto Image</title>
        <dc:creator><![CDATA[dfrey]]></dc:creator>
        <description><![CDATA[
            <p>Have you tried <code>make image_bin</code>.  I believe <code>make image_src</code> is only possible within Sierra Wireless because it depends on proprietary source.</p>
          <p><a href="https://forum.mangoh.io/t/building-custom-yocto-image/1299/19">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mangoh.io/t/building-custom-yocto-image/1299/19</link>
        <pubDate>Tue, 29 May 2018 19:14:52 +0000</pubDate>
        <guid isPermaLink="false">forum.mangoh.io-post-1299-19</guid>
        <source url="https://forum.mangoh.io/t/building-custom-yocto-image/1299.rss">Building Custom Yocto Image</source>
      </item>
      <item>
        <title>Building Custom Yocto Image</title>
        <dc:creator><![CDATA[drewwestrick]]></dc:creator>
        <description><![CDATA[
            <p>I’m currently trying to build yocto from source using the WP76XX <a href="http://downloads.sierrawireless.com/AirPrime/WP76xx/Release9/Legato-Dist-Source-mdm9x28-SWI9X07Y_02.16.02.00.tar.bz2" rel="nofollow noopener">SWI9X07Y_02.16.02.00</a> code and the steps posted above.</p>
<p>I’ve installed all the host build dependencies called out in <a href="https://www.yoctoproject.org/docs/1.8/yocto-project-qs/yocto-project-qs.html" rel="nofollow noopener">Yocto Project Quick Start</a>.</p>
<p>My process is the following:</p>
<ol>
<li>untar the source</li>
<li><code>repo sync</code></li>
<li><code>make image_bin</code></li>
</ol>
<p>The build is failing and I am getting the following errors which relates to qemu-native 2.7.0-r1:</p>
<blockquote>
<p>ERROR: qemu-native-2.7.0-r1 do_compile: oe_runmake failed<br>
ERROR: qemu-native-2.7.0-r1 do_compile: Function failed: do_compile (log file is located at /home/drewwestrick/SW/workspace/legato_framework/yocto/build_bin/tmp/work/x86_64-linux/qemu-native/2.7.0-r1/temp/log.do_compile.27008)<br>
ERROR: Logfile of failure stored in: /home/drewwestrick/SW/workspace/legato_framework/yocto/build_bin/tmp/work/x86_64-linux/qemu-native/2.7.0-r1/temp/log.do_compile.27008<br>
Log data follows:<br>
| DEBUG: Executing shell function do_compile<br>
| NOTE: make -j 4 LD=ld  AR=ar OBJCOPY=objcopy LDFLAGS=-L/home/drewwestrick/SW/workspace/legato_framework/yocto/build_bin/tmp/sysroots/x86_64-linux/usr/lib -L/home/drewwestrick/SW/workspace/legato_framework/yocto/build_bin/tmp/sysroots/x86_64-linux/lib -Wl,-rpath-link,/home/drewwestrick/SW/workspace/legato_framework/yocto/build_bin/tmp/sysroots/x86_64-linux/usr/lib -Wl,-rpath-link,/home/drewwestrick/SW/workspace/legato_framework/yocto/build_bin/tmp/sysroots/x86_64-linux/lib -Wl,-rpath,/home/drewwestrick/SW/workspace/legato_framework/yocto/build_bin/tmp/sysroots/x86_64-linux/usr/lib -Wl,-rpath,/home/drewwestrick/SW/workspace/legato_framework/yocto/build_bin/tmp/sysroots/x86_64-linux/lib -Wl,-O1 -fuse-ld=bfd<br>
| ERROR: oe_runmake failed<br>
|   GEN   arm-softmmu/config-devices.mak.tmp<br>
|   GEN   aarch64-softmmu/config-devices.mak.tmp<br>
|   GEN   aarch64-linux-user/config-devices.mak.tmp<br>
|   GEN   arm-linux-user/config-devices.mak.tmp<br>
|   GEN   arm-linux-user/config-devices.mak<br>
|   GEN   aarch64-linux-user/config-devices.mak<br>
|   GEN   i386-linux-user/config-devices.mak.tmp<br>
|   GEN   i386-softmmu/config-devices.mak.tmp<br>
|   GEN   arm-softmmu/config-devices.mak<br>
|   GEN   mips-linux-user/config-devices.mak.tmp<br>
|   GEN   aarch64-softmmu/config-devices.mak<br>
|   GEN   mips-softmmu/config-devices.mak.tmp<br>
|   GEN   i386-linux-user/config-devices.mak<br>
|   GEN   mips-linux-user/config-devices.mak<br>
|   GEN   mipsel-softmmu/config-devices.mak.tmp<br>
|   GEN   i386-softmmu/config-devices.mak<br>
|   GEN   mipsel-linux-user/config-devices.mak.tmp<br>
|   GEN   mips64-linux-user/config-devices.mak.tmp<br>
|   GEN   mipsel-linux-user/config-devices.mak<br>
|   GEN   mips64-linux-user/config-devices.mak<br>
|   GEN   mips64-softmmu/config-devices.mak.tmp<br>
|   GEN   ppc-linux-user/config-devices.mak.tmp<br>
|   GEN   mipsel-softmmu/config-devices.mak<br>
|   GEN   mips-softmmu/config-devices.mak<br>
|   GEN   ppc-softmmu/config-devices.mak.tmp<br>
|   GEN   x86_64-linux-user/config-devices.mak.tmp<br>
|   GEN   ppc-linux-user/config-devices.mak<br>
|   GEN   x86_64-softmmu/config-devices.mak.tmp<br>
|   GEN   x86_64-linux-user/config-devices.mak<br>
|   GEN   mips64-softmmu/config-devices.mak<br>
|   GEN   ppc-softmmu/config-devices.mak<br>
|   GEN   x86_64-softmmu/config-devices.mak<br>
|   GEN   qemu-options.def<br>
|   GEN   config-host.h<br>
|   GEN   qmp-commands.h<br>
|   GEN   qapi-types.h<br>
|   GEN   qapi-visit.h<br>
|   GEN   qapi-event.h<br>
|   GEN   qmp-introspect.h<br>
|   GEN   tests/test-qapi-types.h<br>
|   GEN   tests/test-qapi-visit.h<br>
|   GEN   tests/test-qmp-commands.h<br>
|   GEN   tests/test-qapi-event.h<br>
|   GEN   tests/test-qmp-introspect.h<br>
|   GEN   config-all-devices.mak<br>
|   GEN   trace/generated-events.h<br>
|   GEN   trace/generated-tracers.h<br>
|   GEN   trace/generated-tcg-tracers.h<br>
|   GEN   trace/generated-helpers-wrappers.h<br>
|   GEN   trace/generated-helpers.h<br>
|   CC    tests/qemu-iotests/socket_scm_helper.o<br>
|   GEN   qemu-monitor.texi<br>
|   GEN   qemu-img-cmds.texi<br>
|   GEN   qemu-options.texi<br>
|   GEN   qemu-monitor-info.texi<br>
|   GEN   qemu-tech.html<br>
|   GEN   qemu-img.1<br>
|   GEN   qemu-nbd.8<br>
|   GEN   qemu-ga.8<br>
|   GEN   qmp-commands.txt<br>
|   GEN   qga/qapi-generated/qga-qapi-types.h<br>
|   GEN   qga/qapi-generated/qga-qapi-visit.h<br>
|   GEN   qga/qapi-generated/qga-qmp-commands.h<br>
|   GEN   qga/qapi-generated/qga-qapi-types.c<br>
|   GEN   qga/qapi-generated/qga-qapi-visit.c<br>
|   GEN   qga/qapi-generated/qga-qmp-marshal.c<br>
|   GEN   qmp-introspect.c<br>
|   GEN   qapi-types.c<br>
|   GEN   qapi-visit.c<br>
|   GEN   qapi-event.c<br>
|   CC    qapi/qapi-visit-core.o<br>
|   CC    qapi/qapi-dealloc-visitor.o<br>
|   CC    qapi/qmp-input-visitor.o<br>
|   CC    qapi/qmp-output-visitor.o<br>
|   CC    qapi/qmp-dispatch.o<br>
|   CC    qapi/qmp-registry.o<br>
|   CC    qapi/string-input-visitor.o<br>
|   CC    qapi/string-output-visitor.o<br>
|   CC    qapi/opts-visitor.o<br>
|   CC    qapi/qapi-clone-visitor.o<br>
|   CC    qapi/qmp-event.o<br>
|   CC    qapi/qapi-util.o<br>
|   CC    qobject/qnull.o<br>
|   CC    qobject/qint.o<br>
|   CC    qobject/qstring.o<br>
|   CC    qobject/qdict.o<br>
|   CC    qobject/qlist.o<br>
|   CC    qobject/qfloat.o<br>
|   CC    qobject/qbool.o<br>
|   CC    qobject/qjson.o<br>
|   CC    qobject/qobject.o<br>
|   CC    qobject/json-lexer.o<br>
|   CC    qobject/json-streamer.o<br>
|   CC    qobject/json-parser.o<br>
|   GEN   trace/generated-events.c<br>
|   CC    trace/control.o<br>
|   CC    trace/qmp.o<br>
|   CC    util/osdep.o<br>
|   CC    util/cutils.o<br>
|   CC    util/unicode.o<br>
|   CC    util/qemu-timer-common.o<br>
|   CC    util/compatfd.o<br>
|   CC    util/event_notifier-posix.o<br>
|   CC    util/mmap-alloc.o<br>
|   CC    util/oslib-posix.o<br>
|   CC    util/qemu-openpty.o<br>
|   CC    util/qemu-thread-posix.o<br>
|   CC    util/memfd.o<br>
| /home/drewwestrick/SW/workspace/legato_framework/yocto/build_bin/tmp/work/x86_64-linux/qemu-native/2.7.0-r1/qemu-2.7.0/util/memfd.c:40:12: error: static declaration of ‘memfd_create’ follows non-static declaration<br>
|  static int memfd_create(const char *name, unsigned int flags)<br>
|             ^~~~~~~~~~~~<br>
| In file included from /usr/include/x86_64-linux-gnu/bits/mman-linux.h:115:0,<br>
|                  from /usr/include/x86_64-linux-gnu/bits/mman.h:45,<br>
|                  from /usr/include/x86_64-linux-gnu/sys/mman.h:41,<br>
|                  from /home/drewwestrick/SW/workspace/legato_framework/yocto/build_bin/tmp/work/x86_64-linux/qemu-native/2.7.0-r1/qemu-2.7.0/include/sysemu/os-posix.h:29,<br>
|                  from /home/drewwestrick/SW/workspace/legato_framework/yocto/build_bin/tmp/work/x86_64-linux/qemu-native/2.7.0-r1/qemu-2.7.0/include/qemu/osdep.h:104,<br>
|                  from /home/drewwestrick/SW/workspace/legato_framework/yocto/build_bin/tmp/work/x86_64-linux/qemu-native/2.7.0-r1/qemu-2.7.0/util/memfd.c:28:<br>
| /usr/include/x86_64-linux-gnu/bits/mman-shared.h:46:5: note: previous declaration of ‘memfd_create’ was here<br>
|  int memfd_create (const char *__name, unsigned int __flags) __THROW;<br>
|      ^~~~~~~~~~~~<br>
| /home/drewwestrick/SW/workspace/legato_framework/yocto/build_bin/tmp/work/x86_64-linux/qemu-native/2.7.0-r1/qemu-2.7.0/rules.mak:59: recipe for target ‘util/memfd.o’ failed<br>
| make: *** [util/memfd.o] Error 1<br>
| make: *** Waiting for unfinished jobs…<br>
| WARNING: /home/drewwestrick/SW/workspace/legato_framework/yocto/build_bin/tmp/work/x86_64-linux/qemu-native/2.7.0-r1/temp/run.do_compile.27008:1 exit 1 from ‘exit 1’<br>
| ERROR: Function failed: do_compile (log file is located at /home/drewwestrick/SW/workspace/legato_framework/yocto/build_bin/tmp/work/x86_64-linux/qemu-native/2.7.0-r1/temp/log.do_compile.27008)<br>
ERROR: Task (virtual:native:/home/drewwestrick/SW/workspace/legato_framework/yocto/poky/meta/recipes-devtools/qemu/qemu_2.7.0.bb:do_compile) failed with exit code ‘1’<br>
NOTE: Tasks Summary: Attempted 857 tasks of which 0 didn’t need to be rerun and 1 failed.<br>
Summary: 1 task failed:<br>
virtual:native:/home/drewwestrick/SW/workspace/legato_framework/yocto/poky/meta/recipes-devtools/qemu/qemu_2.7.0.bb:do_compile<br>
Summary: There were 9 WARNING messages shown.<br>
Summary: There were 2 ERROR messages shown, returning a non-zero exit code.<br>
Makefile:217: recipe for target ‘image_bin’ failed</p>
</blockquote>
<p>Build Configuration:</p>
<blockquote>
<p>Build Configuration:<br>
BB_VERSION        = “1.32.0”<br>
BUILD_SYS         = “x86_64-linux”<br>
NATIVELSBSTRING   = “Ubuntu-18.04”<br>
TARGET_SYS        = “arm-poky-linux-gnueabi”<br>
MACHINE           = “swi-mdm9x28”<br>
DISTRO            = “poky-swi-ext”<br>
DISTRO_VERSION    = “2.2.3”<br>
TUNE_FEATURES     = “arm armv7a vfp  neon”<br>
TARGET_FPU        = “softfp”<br>
meta<br>
meta-poky<br>
meta-yocto-bsp    = “HEAD:e6aadcc2a04ae4e85b1cb00c5c9ce1c0f76ee871”<br>
meta-python<br>
meta-networking<br>
meta-oe           = “HEAD:b40116cf457b88a2db14b86fda9627fb34d56ae6”<br>
common<br>
meta-swi-mdm9xxx<br>
meta-swi-mdm9x28  = “HEAD:f646dfd3f5c04ca9a38321020cc4f3f9bdc015f5”<br>
meta-swi-mdm9xxx-bin<br>
meta-swi-mdm9x28-bin<br>
meta-swi-mdm9x28<br>
meta-swi-mdm9xxx-bin<br>
meta-swi-mdm9x28-bin<br>
common            = “HEAD:9aca15ff07789cda916d0cd7efc4dacb87714883”</p>
</blockquote>
<p>Should I try and use a more up-to-date version of qemu-native?</p>
<p><a class="mention" href="https://forum.mangoh.io/u/dfrey">@dfrey</a> <a class="mention" href="https://forum.mangoh.io/u/dclark75">@dclark75</a> <a class="mention" href="https://forum.mangoh.io/u/asyal">@asyal</a></p>
          <p><a href="https://forum.mangoh.io/t/building-custom-yocto-image/1299/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mangoh.io/t/building-custom-yocto-image/1299/18</link>
        <pubDate>Tue, 29 May 2018 18:27:05 +0000</pubDate>
        <guid isPermaLink="false">forum.mangoh.io-post-1299-18</guid>
        <source url="https://forum.mangoh.io/t/building-custom-yocto-image/1299.rss">Building Custom Yocto Image</source>
      </item>
      <item>
        <title>Building Custom Yocto Image</title>
        <dc:creator><![CDATA[fjanicki]]></dc:creator>
        <description><![CDATA[
            <p>I found this repo but it seems outdated. Maybe we can create an unofficial git repo?</p>
<p><a href="https://github.com/meta-swi/meta-swi" class="onebox" target="_blank" rel="nofollow noopener">https://github.com/meta-swi/meta-swi</a></p>
          <p><a href="https://forum.mangoh.io/t/building-custom-yocto-image/1299/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mangoh.io/t/building-custom-yocto-image/1299/17</link>
        <pubDate>Tue, 24 Apr 2018 18:13:51 +0000</pubDate>
        <guid isPermaLink="false">forum.mangoh.io-post-1299-17</guid>
        <source url="https://forum.mangoh.io/t/building-custom-yocto-image/1299.rss">Building Custom Yocto Image</source>
      </item>
      <item>
        <title>Building Custom Yocto Image</title>
        <dc:creator><![CDATA[nick]]></dc:creator>
        <description><![CDATA[
            <p>Yeah the tarball approach is definitely a little painful. I double checked the versions and it’s definitely Yocto <code>1.7.3</code> as you stated (not sure why I had a newer version in my head). I suspect Sierra Wireless will supply a nicer approach to managing custom images as it becomes more popular.</p>
<p>Cheers!</p>
          <p><a href="https://forum.mangoh.io/t/building-custom-yocto-image/1299/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mangoh.io/t/building-custom-yocto-image/1299/16</link>
        <pubDate>Mon, 23 Apr 2018 21:38:18 +0000</pubDate>
        <guid isPermaLink="false">forum.mangoh.io-post-1299-16</guid>
        <source url="https://forum.mangoh.io/t/building-custom-yocto-image/1299.rss">Building Custom Yocto Image</source>
      </item>
      <item>
        <title>Building Custom Yocto Image</title>
        <dc:creator><![CDATA[fjanicki]]></dc:creator>
        <description><![CDATA[
            <p>Not sure, I just use the version bundled in the tarball provided from sierra wireless’s download section. I would much prefer to use a git repo but none is available. Problem is that the bundled version is very old and it would be nice to be able to use a newer version.</p>
          <p><a href="https://forum.mangoh.io/t/building-custom-yocto-image/1299/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mangoh.io/t/building-custom-yocto-image/1299/15</link>
        <pubDate>Mon, 23 Apr 2018 21:20:31 +0000</pubDate>
        <guid isPermaLink="false">forum.mangoh.io-post-1299-15</guid>
        <source url="https://forum.mangoh.io/t/building-custom-yocto-image/1299.rss">Building Custom Yocto Image</source>
      </item>
      <item>
        <title>Building Custom Yocto Image</title>
        <dc:creator><![CDATA[nick]]></dc:creator>
        <description><![CDATA[
            <p>Where are you grabbing the Yocto version from? I recall seeing a newer revision somewhere in the code/build but I can’t seem to find it again.</p>
<p>Cheers!</p>
          <p><a href="https://forum.mangoh.io/t/building-custom-yocto-image/1299/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mangoh.io/t/building-custom-yocto-image/1299/14</link>
        <pubDate>Mon, 23 Apr 2018 20:52:49 +0000</pubDate>
        <guid isPermaLink="false">forum.mangoh.io-post-1299-14</guid>
        <source url="https://forum.mangoh.io/t/building-custom-yocto-image/1299.rss">Building Custom Yocto Image</source>
      </item>
      <item>
        <title>Building Custom Yocto Image</title>
        <dc:creator><![CDATA[nick]]></dc:creator>
        <description><![CDATA[
            <p>Thanks <a class="mention" href="https://forum.mangoh.io/u/fjanicki">@fjanicki</a>, I’ll give this a try.</p>
          <p><a href="https://forum.mangoh.io/t/building-custom-yocto-image/1299/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mangoh.io/t/building-custom-yocto-image/1299/13</link>
        <pubDate>Mon, 23 Apr 2018 20:51:46 +0000</pubDate>
        <guid isPermaLink="false">forum.mangoh.io-post-1299-13</guid>
        <source url="https://forum.mangoh.io/t/building-custom-yocto-image/1299.rss">Building Custom Yocto Image</source>
      </item>
      <item>
        <title>Building Custom Yocto Image</title>
        <dc:creator><![CDATA[fjanicki]]></dc:creator>
        <description><![CDATA[
            <p>I think that to be able to access bitbake, you need to run <code>source oe-init-build-env</code> in the <code>/poky</code> directory.</p>
          <p><a href="https://forum.mangoh.io/t/building-custom-yocto-image/1299/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mangoh.io/t/building-custom-yocto-image/1299/12</link>
        <pubDate>Mon, 23 Apr 2018 19:49:59 +0000</pubDate>
        <guid isPermaLink="false">forum.mangoh.io-post-1299-12</guid>
        <source url="https://forum.mangoh.io/t/building-custom-yocto-image/1299.rss">Building Custom Yocto Image</source>
      </item>
      <item>
        <title>Building Custom Yocto Image</title>
        <dc:creator><![CDATA[fjanicki]]></dc:creator>
        <description><![CDATA[
            <p>Possible to get a git repository of the <code>meta-</code> modules? If we want to roll our own yocto repo using the latest yocto version? Because the tarball contains a very old version of yocto, according to here <a href="https://wiki.yoctoproject.org/wiki/Releases" rel="nofollow noopener">https://wiki.yoctoproject.org/wiki/Releases</a> (1.7.3) was released in 2014…</p>
          <p><a href="https://forum.mangoh.io/t/building-custom-yocto-image/1299/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mangoh.io/t/building-custom-yocto-image/1299/11</link>
        <pubDate>Mon, 23 Apr 2018 19:39:25 +0000</pubDate>
        <guid isPermaLink="false">forum.mangoh.io-post-1299-11</guid>
        <source url="https://forum.mangoh.io/t/building-custom-yocto-image/1299.rss">Building Custom Yocto Image</source>
      </item>
      <item>
        <title>Building Custom Yocto Image</title>
        <dc:creator><![CDATA[nick]]></dc:creator>
        <description><![CDATA[
            <p>Hey <a class="mention" href="https://forum.mangoh.io/u/souhail">@Souhail</a> sorry for the delayed reply.</p>
<p>I’ve been working with custom images and I think I have a better understanding of how this all comes together. To my knowledge, <code>SWI9X15Y_07.12.14.00</code> refers to the modem firmware and not the Legato version (though certain Legato releases come bundled with certain modem firmware versions), which is not part of the Yocto image. I found this diagram very helpful in that regard: </p><div class="lightbox-wrapper"><a class="lightbox" href="https://global.discourse-cdn.com/business6/uploads/mangoh/original/1X/7fd06b10718755e613e222096e52f6edc417ed8d.png" data-download-href="/uploads/short-url/ieHaHWMP7XRUExIPslEJUv4tUzX.png?dl=1" title="WP Flash Mapping.png" rel="nofollow noopener"><img src="https://global.discourse-cdn.com/business6/uploads/mangoh/optimized/1X/7fd06b10718755e613e222096e52f6edc417ed8d_2_452x500.png" alt="WP%20Flash%20Mapping" data-base62-sha1="ieHaHWMP7XRUExIPslEJUv4tUzX" width="452" height="500" srcset="https://global.discourse-cdn.com/business6/uploads/mangoh/optimized/1X/7fd06b10718755e613e222096e52f6edc417ed8d_2_452x500.png, https://global.discourse-cdn.com/business6/uploads/mangoh/original/1X/7fd06b10718755e613e222096e52f6edc417ed8d.png 1.5x, https://global.discourse-cdn.com/business6/uploads/mangoh/original/1X/7fd06b10718755e613e222096e52f6edc417ed8d.png 2x" data-small-upload="https://global.discourse-cdn.com/business6/uploads/mangoh/optimized/1X/7fd06b10718755e613e222096e52f6edc417ed8d_2_10x10.png"></a></div><p></p>
<p>I’ve been successfully flashing custom <code>.spk</code> files produced using <code>swicwe</code> (thanks again for the suggestion <a class="mention" href="https://forum.mangoh.io/u/souhail">@Souhail</a>).</p>
<p>On an unrelated note, <a class="mention" href="https://forum.mangoh.io/u/dclark75">@dclark75</a>, would you be able to clarify a little bit on customizing the kernel? I’m a little confused as to why we run <code>VERBOSE=1 make ARCH=arm menuconfig</code> in <code>$LEGATO_KERNELROOT</code> instead of in the main kernel directory (e.g <code>/build-folder/yocto/kernel</code>) before running <code>make image_bin</code>. Additionally, I had some trouble finding the BitBake executable. I’m sure it’s in here somewhere, but I don’t have the executable in my path, so simply invoking <code>bitbake</code> doesn’t work.</p>
<p>Cheers!</p>
          <p><a href="https://forum.mangoh.io/t/building-custom-yocto-image/1299/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mangoh.io/t/building-custom-yocto-image/1299/10</link>
        <pubDate>Fri, 20 Apr 2018 18:43:35 +0000</pubDate>
        <guid isPermaLink="false">forum.mangoh.io-post-1299-10</guid>
        <source url="https://forum.mangoh.io/t/building-custom-yocto-image/1299.rss">Building Custom Yocto Image</source>
      </item>
      <item>
        <title>Building Custom Yocto Image</title>
        <dc:creator><![CDATA[Souhail]]></dc:creator>
        <description><![CDATA[
            <p>The SWI9X15Y_07.12.09.00  and SWI9X15Y_07.12.14.00 concerns the legato version not the linux image, in order to have an .spk image with the correct legato version you should build yocto image then run the swicwe  command and you should point on both the linux image and the legato image that you want to install. It is better to use AT command to check the version using microcom interface. I hope that helps you.</p>
          <p><a href="https://forum.mangoh.io/t/building-custom-yocto-image/1299/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mangoh.io/t/building-custom-yocto-image/1299/9</link>
        <pubDate>Wed, 11 Apr 2018 15:07:31 +0000</pubDate>
        <guid isPermaLink="false">forum.mangoh.io-post-1299-9</guid>
        <source url="https://forum.mangoh.io/t/building-custom-yocto-image/1299.rss">Building Custom Yocto Image</source>
      </item>
      <item>
        <title>Building Custom Yocto Image</title>
        <dc:creator><![CDATA[nick]]></dc:creator>
        <description><![CDATA[
            <p>Update: I flashed release 14 (pre-built <code>.spk</code> file) and the version changed to match(<code>SWI9X15Y_07.12.09.00 r34123 CARMD-EV-FRMWR1 2017/04/26 23:34:19</code>). After that, I tried re-flashing our custom build (based on<code>SWI9X15Y_07.12.14.00</code>) and did not see the version change. This more or less confirms that our custom builds are not flashing.</p>
          <p><a href="https://forum.mangoh.io/t/building-custom-yocto-image/1299/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mangoh.io/t/building-custom-yocto-image/1299/8</link>
        <pubDate>Tue, 10 Apr 2018 21:12:27 +0000</pubDate>
        <guid isPermaLink="false">forum.mangoh.io-post-1299-8</guid>
        <source url="https://forum.mangoh.io/t/building-custom-yocto-image/1299.rss">Building Custom Yocto Image</source>
      </item>
      <item>
        <title>Building Custom Yocto Image</title>
        <dc:creator><![CDATA[nick]]></dc:creator>
        <description><![CDATA[
            <p>Hey <a class="mention" href="https://forum.mangoh.io/u/dclark75">@dclark75</a>,</p>
<p>I’ve recently had some success building yocto from scratch for the WP85 using the tar ball I linked above. I modified  <code>meta-swi-extras/meta-swi-bin/files/fw-version</code> in attempt to release my own build (mostly for the purpose of confirming that it flashed successfully). I was also sure to commit the changes since I’ve heard the build process will re-clone repos sometimes. After flashing this custom build, I did not see the updated firmware version. I believe these this could be two things:</p>
<ol>
<li>The firmware version is defined in 2 places somewhere else</li>
<li>The custom build is not flashing successfully (despite a success message from <code>swiflash</code>)</li>
</ol>
<p>Do you guys have any debugging advice? Unfortunately we do not have access to a serial console on these units.</p>
          <p><a href="https://forum.mangoh.io/t/building-custom-yocto-image/1299/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mangoh.io/t/building-custom-yocto-image/1299/7</link>
        <pubDate>Tue, 10 Apr 2018 20:43:05 +0000</pubDate>
        <guid isPermaLink="false">forum.mangoh.io-post-1299-7</guid>
        <source url="https://forum.mangoh.io/t/building-custom-yocto-image/1299.rss">Building Custom Yocto Image</source>
      </item>
      <item>
        <title>Building Custom Yocto Image</title>
        <dc:creator><![CDATA[dfrey]]></dc:creator>
        <description><![CDATA[
            <p>The repo steps are wrong. <a class="mention" href="https://forum.mangoh.io/u/nick">@nick</a> is correct that gerrit-legato is a server only accessible inside Sierra Wireless. For now, download the tarball for your module. <a class="mention" href="https://forum.mangoh.io/u/nick">@nick</a> linked to the one for wp75/85.</p>
          <p><a href="https://forum.mangoh.io/t/building-custom-yocto-image/1299/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mangoh.io/t/building-custom-yocto-image/1299/6</link>
        <pubDate>Sat, 07 Apr 2018 16:47:52 +0000</pubDate>
        <guid isPermaLink="false">forum.mangoh.io-post-1299-6</guid>
        <source url="https://forum.mangoh.io/t/building-custom-yocto-image/1299.rss">Building Custom Yocto Image</source>
      </item>
      <item>
        <title>Building Custom Yocto Image</title>
        <dc:creator><![CDATA[nick]]></dc:creator>
        <description><![CDATA[
            <p>Hey <a class="mention" href="https://forum.mangoh.io/u/deadpoolcode">@deadpoolcode</a>,</p>
<p>I just got some build hardware so I’m just starting to unravel this as well. I think everything you need can be found in here: <a href="http://downloads.sierrawireless.com/AirPrime/WPx5xx/Release15/Legato-Dist-Source-mdm9x15-SWI9X15Y_07.12.14.00.tar.bz2" rel="nofollow noopener">http://downloads.sierrawireless.com/AirPrime/WPx5xx/Release15/Legato-Dist-Source-mdm9x15-SWI9X15Y_07.12.14.00.tar.bz2</a></p>
          <p><a href="https://forum.mangoh.io/t/building-custom-yocto-image/1299/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mangoh.io/t/building-custom-yocto-image/1299/5</link>
        <pubDate>Sat, 07 Apr 2018 00:37:47 +0000</pubDate>
        <guid isPermaLink="false">forum.mangoh.io-post-1299-5</guid>
        <source url="https://forum.mangoh.io/t/building-custom-yocto-image/1299.rss">Building Custom Yocto Image</source>
      </item>
      <item>
        <title>Building Custom Yocto Image</title>
        <dc:creator><![CDATA[deadpoolcode]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="dclark75" data-post="1" data-topic="1299">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://avatars.discourse-cdn.com/v4/letter/d/a8b319/40.png" class="avatar"> dclark75:</div>
<blockquote>
<p>wp76xx.xml</p>
</blockquote>
</aside>
<p>thank you, if so how can I get the sources in order to build a Yocto  image?</p>
          <p><a href="https://forum.mangoh.io/t/building-custom-yocto-image/1299/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mangoh.io/t/building-custom-yocto-image/1299/4</link>
        <pubDate>Sat, 07 Apr 2018 00:14:51 +0000</pubDate>
        <guid isPermaLink="false">forum.mangoh.io-post-1299-4</guid>
        <source url="https://forum.mangoh.io/t/building-custom-yocto-image/1299.rss">Building Custom Yocto Image</source>
      </item>
      <item>
        <title>Building Custom Yocto Image</title>
        <dc:creator><![CDATA[nick]]></dc:creator>
        <description><![CDATA[
            <p>I suspect those are internal git servers.</p>
          <p><a href="https://forum.mangoh.io/t/building-custom-yocto-image/1299/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mangoh.io/t/building-custom-yocto-image/1299/3</link>
        <pubDate>Sat, 07 Apr 2018 00:12:43 +0000</pubDate>
        <guid isPermaLink="false">forum.mangoh.io-post-1299-3</guid>
        <source url="https://forum.mangoh.io/t/building-custom-yocto-image/1299.rss">Building Custom Yocto Image</source>
      </item>
      <item>
        <title>Building Custom Yocto Image</title>
        <dc:creator><![CDATA[deadpoolcode]]></dc:creator>
        <description><![CDATA[
            <p>currently not working, I can not get the xml:</p>
<p>repo init -u git://gerrit-legato/manifest -m lxswi/branches/master/systems/wp76xx.xml</p>
<p>fatal: unable to connect to gerrit-legato:<br>
gerrit-legato: Name or service not known</p>
<p>please advice</p>
          <p><a href="https://forum.mangoh.io/t/building-custom-yocto-image/1299/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mangoh.io/t/building-custom-yocto-image/1299/2</link>
        <pubDate>Sat, 07 Apr 2018 00:10:01 +0000</pubDate>
        <guid isPermaLink="false">forum.mangoh.io-post-1299-2</guid>
        <source url="https://forum.mangoh.io/t/building-custom-yocto-image/1299.rss">Building Custom Yocto Image</source>
      </item>
      <item>
        <title>Building Custom Yocto Image</title>
        <dc:creator><![CDATA[dclark75]]></dc:creator>
        <description><![CDATA[
            <p>The instructions below show how to build custom yocto images for the WP76 and WP85.  Note that if someone chooses to build their own yocto image then they should set the LEGATO_KERNELROOT environment variable before building MangOH, for example:</p>
<p><strong>WP85</strong>:<br>
export LEGATO_KERNELROOT="~/yocto-2.2/build_src/tmp/work/swi_mdm9x15-poky-linux-gnueabi/linux-yocto/3.14.29-r0.1/linux-swi_mdm9x15-standard-build"</p>
<p><strong>WP76</strong>:<br>
export LEGATO_KERNELROOT="~/yocto-2.2/build_src/tmp/work/swi_mdm9x28-poky-linux-gnueabi/linux-quic/3.18.44-r1/build"</p>
<p><strong>1. Initialize repo</strong></p>
<p>Create yocto folder:<br>
mkdir ~/yocto-2.2<br>
cd ~/yocto-2.2</p>
<p><strong>WP85</strong>:<br>
repo init -u git://gerrit-legato/manifest -m lxswi/branches/master/systems/wp85xx.xml -g “default,amss”</p>
<p><strong>WP76</strong>:<br>
repo init -u git://gerrit-legato/manifest -m lxswi/branches/master/systems/wp76xx.xml</p>
<p><strong>2. Synchronize repo and build yocto</strong></p>
<p>repo sync<br>
make image_src</p>
<p>To set/unset kernel configuration options use the following commands:<br>
cd $LEGATO_KERNELROOT<br>
VERBOSE=1 make ARCH=arm menuconfig</p>
<p>Note if you just want to rebuild the kernel then the following can be used in a script (e.g. here we create a script called build_kernel.sh and place in the build_src folder).</p>
<p><strong>WP85</strong>:<br>
bitbake -c compile -f linux-yocto<br>
bitbake -c build -f linux-yocto<br>
bitbake -c build -f mdm9x15-image-minimal</p>
<p><strong>WP76</strong>:<br>
bitbake -c compile -f linux-quic<br>
bitbake -c build -f linux-quic<br>
bitbake -c build -f mdm9x28-image-minimal</p>
<p><strong>3. Build and install the toolchain (optional)</strong></p>
<p>Note this step is only required for users that desire to build their own toolchain instead of downloading it from the sierrawireless web sites:</p>
<p><strong>WP85</strong>:<br>
<a href="https://source.sierrawireless.com/resources/airprime/software/wpx5xx/wpx5xx-firmware-latest-release-components/" class="onebox" target="_blank">https://source.sierrawireless.com/resources/airprime/software/wpx5xx/wpx5xx-firmware-latest-release-components/</a></p>
<p><strong>WP76</strong>:<br>
<a href="https://source.sierrawireless.com/resources/airprime/software/wp76xx/wp76xx-firmware-latest-release-components/" class="onebox" target="_blank">https://source.sierrawireless.com/resources/airprime/software/wp76xx/wp76xx-firmware-latest-release-components/</a></p>
<p>make toolchain_src</p>
<p><strong>WP85</strong>:<br>
cd ~/yocto-2.2/<br>
sudo ./build_src/tmp/deploy/sdk/poky-swi-ext-glibc-x86_64-meta-toolchain-swi-ext-armv7a-neon-toolchain-swi-ext-2.2.3.sh</p>
<p><strong>WP76</strong>:<br>
cd ~/yocto-2.2/<br>
sudo ./build_src/tmp/deploy/sdk/poky-swi-ext-glibc-x86_64-meta-toolchain-swi-ext-armv7a-neon-toolchain-swi-ext-2.2.3.sh</p>
<p><strong>4. Download new yocto build to the target device</strong></p>
<p>Note before downloading switch pin 7 up for the MangOH Red and then once the downloading has started switch pin 7 back down.</p>
<p><strong>WP85</strong>:<br>
cd ~/yocto-2.2/<br>
swiflash -m “WP85XX” -i  ./build_src/tmp/deploy/images/swi-mdm9x15/yocto-legato_wp85.cwe<br>
OR<br>
copy yocto-legato_wp85.cwe to a folder on Windows PC with fdt2 installed<br>
fdt2 yocto-legato_wp85.cwe</p>
<p><strong>WP76</strong>:<br>
cd ~/yocto-2.2/<br>
swiflash -m “WP76XX” -i  …/yocto-wp76/build_src/tmp/deploy/images/swi-mdm9x28/yocto_wp76xx.4k.cwe<br>
OR<br>
copy yocto-legato_wp85.cwe to a folder on Windows PC with fdt2 installed<br>
fdt2 yocto_wp76xx.4k.cwe</p>
          <p><a href="https://forum.mangoh.io/t/building-custom-yocto-image/1299/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mangoh.io/t/building-custom-yocto-image/1299/1</link>
        <pubDate>Wed, 04 Apr 2018 21:39:30 +0000</pubDate>
        <guid isPermaLink="false">forum.mangoh.io-post-1299-1</guid>
        <source url="https://forum.mangoh.io/t/building-custom-yocto-image/1299.rss">Building Custom Yocto Image</source>
      </item>
  </channel>
</rss>
